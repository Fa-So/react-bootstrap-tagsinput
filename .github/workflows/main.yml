name: "‚ú® Continuous Integration"
env:
  NODE_VERSION: '14.x'

on:
  push:
  pull_request:
    branches: [ master ]

jobs:
  build:
    name: "‚ôª build"
    runs-on: ubuntu-latest

    steps:
      - name: "üõéÔ∏è Checkout"
        uses: actions/checkout@v2

      - name: "üü¢ Setup node"
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}
          always-auth: true
          NPM_TOKEN: ${{secrets.NPM_TOKEN_AUTH}}

      - name: "üëü NPM install"
        run: npm ci

      - name: "üêù Test"
        run: npm test

      - name: "ü•Å Build"
        run: npm run build

      - name: "üó≥Ô∏è Upload"
        uses: actions/upload-artifact@v2
        with:
          name: bundle
          path: dist

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    name: '‚ôª Create release/version bundle and publish'
    runs-on: ubuntu-latest

    steps:

    - name: "üõéÔ∏è Checkout"
      uses: actions/checkout@master

    - name: "üü¢ Setup node"
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}
        registry-url: https://registry.npmjs.org/
        scope: soenmez

    - name: "üëü NPM install"
      run: npm ci

    - name: "ü•Å Build bundle"
      run: |
        npm run build
        zip -r dist-bundle.zip dist

    - name: "üí¨ Create release / version"
      id: create_version
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ${{ github.ref }}
        draft: false
        prerelease: false

    - name: "üöÄ upload assets"
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_version.outputs.upload_url }}
        asset_path: ./dist-bundle.zip
        asset_name: dist-bundle.zip
        asset_content_type: application/zip

    - name: "‚õè Setup NPM & GitHub auth"
      run: |
        rm .npmrc -f
        touch .npmrc
        echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> .npmrc
        echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> .npmrc
        npm whoami
        npm whoami --registry https://npm.pkg.github.com
        git config --global user.name "Fa-So"
        git config --global user.email "$GITHUB_EMAIL"
      env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN_AUTH}}
          NPM_TOKEN: ${{secrets.NPM_TOKEN_AUTH}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        # npm publish --soenmez:registry='https://npm.pkg.github.com' --access=public --scope=@soenmez/react-bootstrap-tagsinput
    
    - name: "üíïnpm publish"
      id: publish
      run: npm publish --access public
      env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN_AUTH}}
          NPM_TOKEN: ${{secrets.NPM_TOKEN_AUTH}}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: "üìù Build gh-page"
      run: |
        cd ./example
        npm install --save-dev react-app-rewired react-app-rewire-alias customize-cra
        npx react-app-rewired build
        cd ..

    - name: "üöÄ Deploy gh-page"
      if: github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./example/build/
