{"version":3,"sources":["../../src/svg-icons/Cancel.tsx","../../node_modules/classnames/index.js","../../src/index.tsx","App.tsx","index.tsx"],"names":["Cancel","props","width","height","viewBox","d","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","window","InputTags","placeholder","values","onTags","name","className","elementClassName","rest","useState","terms","setTerms","value","setValue","focusIndex","setFocusIndex","inputRef","useRef","forceInputFocus","useLayoutEffect","useEffect","handleRemove","index","Math","setSelectedIndex","focus","item","onRemove","onSelectedIndex","React","ref","type","classnames","onChange","event","onKeyUp","currentValue","isPossibleRight","autoFocus","Element","setFocus","tabIndex","onFocus","onBlur","style","outline","onClick","fill","opacity","App","state","setState","margin","data-testid","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba338e6a.chunk.js","sourcesContent":["import React from 'react'\nexport default function Cancel(\n  props: JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>\n): JSX.Element {\n  return (\n    <svg width='24' height='24' viewBox='0 0 24 24' {...props}>\n      <path d='M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm3.59-13L12 10.59 8.41 7 7 8.41 10.59 12 7 15.59 8.41 17 12 13.41 15.59 17 17 15.59 13.41 12 17 8.41z' />\n    </svg>\n  )\n}\n","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// eslint-disable-next-line no-use-before-define\nimport React, {\n  HtmlHTMLAttributes,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState\n} from 'react'\nimport './styles.module.scss'\nimport { Cancel } from './svg-icons'\nimport classnames from 'classnames'\n\nexport type TagsValue = {\n  values: string[]\n  name?: string\n}\n\ninterface InputTagsProps {\n  placeholder?: string\n  onTags: (value: TagsValue) => void\n  values: string[]\n  name?: string\n  elementClassName?: string\n}\n\nexport const InputTags = ({\n  placeholder,\n  values,\n  onTags,\n  name,\n  className,\n  elementClassName,\n  ...rest\n}: InputTagsProps & HtmlHTMLAttributes<HTMLInputElement>): JSX.Element => {\n  const [terms, setTerms] = useState<string[]>(values)\n  const [value, setValue] = useState('')\n  const [focusIndex, setFocusIndex] = useState(-1)\n  const inputRef = useRef<HTMLInputElement>(null)\n\n  const forceInputFocus = () => {\n    if (inputRef.current && focusIndex === -1) {\n      inputRef.current.focus()\n    }\n  }\n\n  useLayoutEffect(() => {\n    if (terms.length === 0) {\n      setFocusIndex(-1)\n    }\n    onTags({ values: terms, name: name })\n  }, [terms.length]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setTerms(values)\n  }, [values])\n\n  useEffect(() => {\n    forceInputFocus()\n  }, [focusIndex]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const onchange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.currentTarget.value)\n  }\n\n  const onkeyup = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    const { key } = event\n    const currentValue = value.trim()\n    const isEndOfText = event.currentTarget.selectionEnd === currentValue.length\n    const isPossibleRight =\n      (isEndOfText || currentValue.length === 0) && terms.length > 0\n    if ((key === 'Enter' || key === ' ') && currentValue != '') {\n      event.preventDefault()\n      setTerms([...terms, currentValue])\n      setValue('')\n      setFocusIndex(-1)\n    } else if (\n      (key === 'Backspace' || key === 'ArrowLeft') &&\n      isPossibleRight\n    ) {\n      event.preventDefault()\n      setFocusIndex(terms.length - 1)\n    } else if (key === 'ArrowRight' && isPossibleRight) {\n      event.preventDefault()\n      setFocusIndex(0)\n    }\n  }\n\n  const handleRemove = (index: number, focus: boolean) => {\n    setTerms(terms.filter((_, i) => i !== index))\n    if (focus) {\n      setFocusIndex(Math.max(focusIndex - 1, 0))\n    } else {\n      forceInputFocus()\n    }\n  }\n\n  const setSelectedIndex = (index: number) => {\n    if (index < terms.length && index > -1) {\n      setFocusIndex(index)\n    } else {\n      setFocusIndex(-1)\n    }\n  }\n\n  return (\n    <div className='form-control d-inline-flex flex-wrap'>\n      {terms.map((item, index) => {\n        const focus = focusIndex === index\n        return (\n          <Element\n            key={`${item}${index}`}\n            value={item}\n            index={index}\n            onRemove={handleRemove}\n            focus={focus}\n            onSelectedIndex={setSelectedIndex}\n            className={elementClassName}\n          />\n        )\n      })}\n      <input\n        data-testid='input-tags'\n        ref={inputRef}\n        type='text'\n        className={classnames(\n          'border-0 w-auto flex-fill input-tags',\n          className\n        )}\n        placeholder={placeholder}\n        aria-label={placeholder}\n        value={value}\n        onChange={onchange}\n        onKeyUp={onkeyup}\n        autoFocus\n        name={name}\n        {...rest}\n      />\n    </div>\n  )\n}\n\ninterface ElementProps {\n  value: string\n  index: number\n  onRemove: (index: number, focus: boolean) => void\n  onSelectedIndex: (index: number) => void\n  focus: boolean\n  className?: string\n}\n\nconst Element = (props: ElementProps): JSX.Element => {\n  const [focus, setFocus] = useState(false)\n  const onclick = () => {\n    props.onRemove(props.index, focus)\n  }\n  const ref = useRef<HTMLDivElement>(null)\n  useLayoutEffect(() => {\n    if (ref.current && props.focus) {\n      ref.current.focus()\n    }\n  }, [props.focus])\n\n  const onkeydown = (event: React.KeyboardEvent<HTMLDivElement>) => {\n    const { key } = event\n    event.preventDefault()\n    if (key === 'Backspace' || key === 'Delete') {\n      props.onRemove(props.index, props.focus)\n    } else if (key === 'ArrowLeft') {\n      props.onSelectedIndex(props.index - 1)\n    } else if (key === 'ArrowRight') {\n      props.onSelectedIndex(props.index + 1)\n    }\n  }\n  return (\n    <div\n      data-testid='tag-element'\n      ref={ref}\n      tabIndex={0}\n      className={classnames(\n        'badge bg-secondary bg-gradient mr-1 my-auto py-auto pr-0 ',\n        props.className\n      )}\n      onKeyUp={onkeydown}\n      onFocus={() => {\n        setFocus(true)\n      }}\n      onBlur={() => {\n        setFocus(false)\n      }}\n    >\n      {props.value}\n      <button\n        data-testid='tag-clean-element'\n        aria-label='remove path fragment'\n        tabIndex={-1}\n        className='border-0 bg-transparent ml-3 mr-1 my-auto py-auto px-0'\n        style={{ outline: 0 }}\n        onClick={onclick}\n      >\n        <Cancel\n          style={{ fill: 'var(--bs-white)', opacity: 1 }}\n          width={18}\n          height={18}\n        />\n      </button>\n    </div>\n  )\n}\n","// eslint-disable-next-line no-use-before-define\nimport React, { useState } from 'react'\n\nimport { InputTags } from 'react-bootstrap-tagsinput'\nimport 'react-bootstrap-tagsinput/dist/index.css'\n\nconst App = () => {\n  const [state, setState] = useState<string[]>([])\n  return (\n    <div style={{ margin: 10 }}>\n      <div className='input-group'>\n        <InputTags values={state} onTags={(value) => setState(value.values)} />\n        <button\n          className='btn btn-outline-secondary'\n          type='button'\n          data-testid='button-clearAll'\n          onClick={() => {\n            setState([])\n          }}\n        >\n          Delete all\n        </button>\n      </div>\n      <hr />\n      <ol>\n        {state.map((item, index) => (\n          <li key={item + index}>{item}</li>\n        ))}\n      </ol>\n    </div>\n  )\n}\n\nexport default App\n","import '../node_modules/react-bootstrap-tagsinput/dist/index.css'\n\n// eslint-disable-next-line no-use-before-define\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}